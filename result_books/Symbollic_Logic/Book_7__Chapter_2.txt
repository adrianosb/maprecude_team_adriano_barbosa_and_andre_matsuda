CHAPTER II. PROBLEMS IN SORITESES. Section 1. Introductory. The Problems we shall have to solve are of the following form:– “Given three or more Propositions of Relation, which are proposed as Premisses: to ascertain what Conclusion, if any, is consequent from them.” We will limit ourselves, at present, to Problems which can be worked by the Formulae of Fig. I. (See p. 75.) Those, that require other Formulae, are rather too hard for beginners. Such Problems may be solved by either of two Methods, viz. (1) The Method of Separate Syllogisms; (2) The Method of Underscoring. These shall be discussed separately. Section 2. Solution by Method of Separate Syllogisms. The Rules, for doing this, are as follows:– (1) Name the ‘Universe of Discourse’. (2) Construct a Dictionary, making a, b, c, &c. represent the Terms. (3) Put the Proposed Premisses into subscript form. (4) Select two which, containing between them a pair of codivisional Classes, can be used as the Premisses of a Syllogisms. (5) Find their Conclusion by Formula. (6) Find a third Premiss which, along with this Conclu- sion, can be used as the Premisses of a second Syllogism. (7) Find a second Conclusion by Formula. (8) Proceed thus, until all the proposed Premisses have been used. (9) Put the last Conclusion, which is the Complete Conclusion of the Sorites, into concrete form. [As an example of this process, let us take, as the proposed Set of Premisses, (1) “All the policemen on this beat sup with our cook; (2) No man with long hair can fail to be a poet; (3) Amos Judd has never been in prison; (4) Our cook’s ‘cousins’ all love cold mutton; (5) None but policemen on this beat ar poets; (6) None but her ‘cousins’ ever sup with our cook; (7) Men with short hair have all been in prison.” Univ. “men”; a = Amos Judd; b = cousins of our cook; c = having been in prison; d = long-haired; e = loving cold mutton; h = poets; k = policemen on this beat; l = supping with our cook We now have to put the proposed Premisses into subscript form. Let us begin by putting them into abstract form. The result is (1) “All k are l; (2) No d are h’; (3) All a are c’; (4) All b are e; (5) No k’ are h; (6) No b’ are l; (7) All d’are c.” And it is now easy to put them into subscript form, as follows:– (1) k1l’0 (2) dh’0 (3) a1c0 (4) b1e’0 (5) k’h0 (6) b’l0 (7) d’1c’0 We now have to find a pair of Premisses which will yield a Conclusion. Let us begin with No. (1), and look down the list, till we come to one which we can take along with it, so as to form Premisses belonging to Fig. I. We find that No. (5) will do, since we can take k as our Eliminand. So our first syllogism is (1) k1l’0 (5) k’h0 .*. l’h0 . . . (8) We must now begin again with l’h0 and find a Premiss to go along with it. We find that No. (2) will do, h being our Eliminand. So our next Syllogism is (8) l’h0 (2) dh’0 .*. l’d0 . . . (9) We have now used up Nos. (1), (5), and (2), and must search among the others for a partner for l’d0. We find that No. (6) will do. So we write (9) l’d0 (6) b’l0 .*. db’0 . . . (10) Now what can we take along with db’0? No. (4) will do. (10) db’0 (4) b1e’0 .*. de’0 . . . (11) Along with this we may take No. (7). (11) de’0 (7) d’1c’0 .*. e’c’0 . . .(12) And along with this we may take No. (3). (12) e’c’0 (3) a1c0 .*. a1c’0 This Complete Conclusion, translated into abstract form, is “All a are e”; and this, translated into concrete form, is “Amos Judd loves cold mutton.” In actually working this Problem, the above explanations would, of course, be omitted, and all, that would appear on paper, would be as follows:–                        (1) k1l'0                        (2) dh'0                        (3) a1c0                        (4) b1e'0                        (5) k'h0                        (6) b'l0                        (7) d'1c'0    (1) k1l'0            (8) l'h0              (9) l'd0    (5) k'h0             (2) dh'0              (6) b'l0    .*. l'h0. .(8)       .*. l'd0. .(9)        .*. db'0. .(10)   (10) db'0            (11) de'0             (12) e'c'0    (4) b1e'0            (7) d'1c'0            (3) a1c0    .*. de'0. .(11)      .*. e'c'0. .(12)      .*. a1c'0 Note that, in working a Sorites by this Process, we may begin with any Premiss we choose.] Section 3. Solution by Method of Underscoring. Consider the Pair of Premisses xm0 Ü ym’0 which yield the Conclusion xy0. We see that, in order to get this Conclusion, we must eliminate m and m’, and write x and y together in one expression. Now, if we agree to mark m and m’ as eliminated, and to read the two expressions together, as if they were written in one, the two Premisses will then exactly represent the Conclusion, and we need not write it out separately. Let us agree to mark the eliminated letters by underscoring them, putting a single score under the first, and a double one under the second. The two Premisses now become xm0 Ü ym’0 - = which we read as “xy0”. In copying out the Premisses for underscoring, it will be convenient to omit all subscritps. As to the “0’s” we may always suppose them written, and, as to the “1’s”, we are not concerned to know which Terms are asserted to exist, except those which appear in the Complete Conclusion; and for them it will be easy enough to refer to the original list. [I will go through the process of solving, by this method, the example worked in Section2. The Data are       1       2      3      4       5      6      7      k1l'0 Ü dh'0 Ü a1c0 Ü b1e'0 Ü k'h0 Ü b'l0 Ü d'1c'0 The Reader should take a piece of paper, and write out this solution for himself. The first line will consist of the above Data; the second must be composed, bit by bit, according to the following directions. We begin by writing down the first Premiss, with its numeral over it, but omitting the subscripts. We have now to find a Premiss which can be combined with this, i.e., a Premiss containing either k’ or l. The first we find is No. 5; and this we tack on, with a Ü. To get the Conclusion form these, k and k’ must be elimi- nated, and what remains must be taken as one expression. So we underscore them, putting a single score under k, and a double one under k’. The result read as l’h. We must now find a Premiss containing either l or h’. Looking along the row, we fix on No. 2, and tack it on. Now these 3 Nullities are really equivalent to (l’h Ü dh’), in which h and h’ must be eliminated, and what remains taken as one expression. So we underscore them. The result reads as l’d. We now want a Premiss containing l or d’. No. 6 will do. These 4 Nullities are really equivalent to (l’d Ü b’l). So we underscore l’ and l. The result reads as db’. We now want a Premiss containing d’ or b. No. 4 will do. Here we underscore b’ and b. The result reads as de’. We now want a Premiss containing d’ or e. No. 7 will do. Here we underscore d and d’. The result read as c’e’. We now want a Premiss containing c or e. No. 3 will do—- in fact must do, as it is the only one left. Here we underscore c’ and c; and, as the whole thing now reads as e’a, we tack on e’a0 as the Conclusion, with a ∂. We now look along the row of Data, to see whether e’ or a has been given as existent. We find that a has been so given in No. 3. So we add this fact to the Conclusion, which now stands as ∂ e’a0 Ü a1, i.e. ∂ a1e’0; i.e. “All a are e.” If the Reader has faithfully obeyed the above directions, his written solution will now stand as follows:–       1       2      3      4       5      6      7      k1l'0 Ü dh'0 Ü a1c0 Ü b1e'0 Ü k'h0 Ü b'l0 Ü d'1c'0       1     5     2     6     4     7      3      kl' Ü k'h Ü dh' Ü b'l Ü be' Ü d'c' Ü ac ∂ e'a0 Ü a1 i.e. ∂ a1e'0      --    = -   -=    - =   =-    = -     = i.e. “All a are e.” The Reader should now take a second piece of paper, and copy the Data only, and try to work out the solution for himself, beginning with some other Premiss. If he fails to bring out the Conclusion a1e’0, I would advise him to take a third piece of paper, and begin again!] I will now work out, in its briefest form, a Sorites of 5 Premisses, to serve as a model for the Reader to imitate in working examples. (1) “I greatly valure everything that John gives me; (2) Nothing but this bone will satisfy my dog; (3) I take particular care of everything that I greatly value; (4) This bone was a present from John; (5) The things, of which I take particular care, are thing I do not give to my dog”. Univ. “things”; a = given by John to me; b = given by me to my dog; c = greatly valued by me; d = satisfactory to my dog”; e = taken particular care of by me; h = this bone.               1       2      3       4       5              a1c'0 Ü h'd0 Ü c1e'0 Ü h1a'0 Ü e1b0               1     3     4     2     5              ac' Ü ce' Ü ha' Ü h'd Ü eb  ∂ db0              --    =-    -=    = -   = i.e “Nothing, that I give my dog, satisfies him,” or, “My dog is not satisfied with anything that I give him!” [Not that, in working a Sorites by this process, we may begin with any Premiss we choose. For instance, we might begin with No. 5, and the result would then be               5    3     1     4     2              eb Ü ce' Ü ac' Ü ha' Ü h'd  ∂ bd0]